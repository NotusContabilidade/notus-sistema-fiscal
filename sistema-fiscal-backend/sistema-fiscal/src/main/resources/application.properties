# ===================================================================
# CONEXÃO COM O BANCO DE DADOS POSTGRESQL
# ===================================================================
# Configure com os dados do seu banco de dados local
spring.datasource.url=jdbc:postgresql://localhost:5432/notus_db
spring.datasource.username=postgres
spring.datasource.password=*N0tvs277

# ===================================================================
# CONFIGURAÇÃO JPA / HIBERNATE
# ===================================================================
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# IMPORTANTE: Desligamos o ddl-auto. A criação das tabelas será
# responsabilidade da nossa aplicação, de forma controlada.
spring.jpa.hibernate.ddl-auto=none

# ===================================================================
# CONFIGURAÇÃO MULTI-TENANCY (ESTRATÉGIA SCHEMA)
# ===================================================================
# Ativa o modo de multi-tenancy para SCHEMA
# Linhas NOVAS (CORRIGIDAS)
# Flyway :
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration
spring.flyway.schemas=public,escritorio_b,simples_nacional
spring.flyway.baseline-on-migrate=true
spring.flyway.out-of-order=true


application.security.jwt.secret-key=Qk5jQ2l6b1JwZ2F2d2h6d2p5bG1uY2F2d2h6d2p5bG1uYw==
application.security.jwt.expiration=86400000 
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG

# ===================================================================
# CONFIGURAÇÃO DO SERVIÇO DE ARMAZENAMENTO (MinIO / S3)
# ===================================================================
aws.s3.bucket-name=notus-documentos
aws.region=us-east-1
aws.accessKeyId=minioadmin
aws.secretKey=minioadmin
# Aponta para o nosso servidor MinIO local ao invés da AWS
aws.s3.endpoint=http://localhost:9000

